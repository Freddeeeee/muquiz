@model HostGameVM

<div id="content">
    <button id="sendsong">Send song</button>

</div>

<div id="players">

</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/@@aspnet/signalr@1.1.0/dist/browser/signalr.min.js"></script>
    <script type="text/javascript">
        (async function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/gamehub")
                .build();

            //to-do: connect to actual game of list which "pops" ?
            let rounds = 3;

            async function sendSong() {
                rounds--;
                await connection.invoke("SendSong", "@Model.GameId", "song");
                //SCH: skulle kunna anropa getHostShowAlternatives redan här?
            }

            window.sendSong = sendSong;

            async function getPartialView(url, successFunc) {
                await $.ajax({
                    url: url,
                    type: "GET",
                    success: async function (result) {
                        successFunc(result)
                    },
                    error: function (result) {
                        console.log(result);
                    }
                })
            }

            async function getHostShowAlternatives(url) {
                await getPartialView(url, async function (result) {
                    $("#content").html(result);
                    await setTimeout(async function () {
                        if (rounds > 0) {
                            await connection.invoke("GoToWaitingScreen", "@Model.GameId");
                            await getHostShowResults();
                        }
                        else {
                            await connection.invoke("SendFinalPosition", "@Model.GameId");
                            await getHostShowFinalResults();
                        }
                    }, 5000);
                })
            }

            async function getHostShowResults() {
                await getPartialView("/host/showresults", result => {
                    $("#content").html(result);
                    $("#players").empty();
                });
            }

            async function getHostShowFinalResults() {
                await getPartialView("/host/showfinalresults", async function (result) {
                    $("#content").html(result);
                });
            }

            connection.on("newsong", async function (song) {
                // to-do: request answers and create url from song
                let url = "/host/showalternatives?song=test";
                await getHostShowAlternatives(url);
            });

            connection.on("receivedanswer", function () {
                $("#players").append("Received answer");
            });

            await connection.start().catch(err => console.log(err));

            $("#sendsong").click(async function () {
                await sendSong();
            });
        })();
    </script>
}